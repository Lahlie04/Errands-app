{"ast":null,"code":"import _asyncToGenerator from \"/Users/da_m1_57/Desktop/projects/we-run/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nlet PostingComponent = class PostingComponent {\n  constructor(service) {\n    this.service = service;\n    this.form = new FormGroup({});\n    this.reqdata = {};\n    this.addressData = {};\n    this.comData = {\n      id: \"any\",\n      comment: \"any\"\n    };\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      street_address: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      comment: new FormControl('', [Validators.required]),\n      city: new FormControl('', Validators.required),\n      suburb: new FormControl('', Validators.required),\n      postal_code: new FormControl('', [Validators.required, Validators.maxLength(4), Validators.minLength(4)])\n    });\n    this.getAddress;\n    this.clientId = localStorage.getItem(\"clientID\");\n    this.serviceId = localStorage.getItem(\"serviceID\");\n    this.getMaxId();\n  }\n\n  alertWithSuccess() {\n    Swal.fire('Thank you...', 'Your post is succesfully sentðŸ˜‰!', 'success');\n  }\n\n  addRequest() {\n    this.reqdata = {\n      client_id: this.clientId,\n      service_id: this.serviceId //comment : this.form.value.comment\n\n    };\n    console.log(this.addressData);\n  }\n\n  getMaxId() {\n    this.service.getMaxId(this.clientId).subscribe(res => {\n      this.request_id = res;\n      this.addressData.request_id = res;\n      localStorage.setItem(\"request_id\", res[0].id);\n      this.request_id = localStorage.getItem(\"request_id\");\n      console.log('The request id is :' + this.request_id);\n    });\n  }\n\n  getAddress() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.addressData = {\n        request_id: localStorage.getItem(\"request_id\"),\n        street_address: _this.form.value.street_address,\n        suburb: _this.form.value.suburb,\n        city: _this.form.value.city,\n        postal_code: _this.form.value.postal_code,\n        comment: _this.form.value.comment\n      };\n      _this.comData.comment = _this.form.value.comment;\n      _this.comData.id = localStorage.getItem(\"request_id\");\n\n      _this.service.getAddress(_this.addressData).subscribe(res => {\n        console.log(res);\n        console.log(_this.comData);\n\n        _this.addComment();\n      });\n    })();\n  }\n\n  addComment() {\n    this.service.addComment(this.comData).subscribe(res => {\n      console.log('comment added');\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    console.log(JSON.stringify(this.form.value, null));\n  }\n\n  myFunction() {\n    console.log(this.form.value);\n  }\n\n};\nPostingComponent = __decorate([Component({\n  selector: 'app-posting',\n  templateUrl: './posting.component.html',\n  styleUrls: ['./posting.component.css']\n})], PostingComponent);\nexport { PostingComponent };","map":{"version":3,"sources":["/Users/da_m1_57/Desktop/projects/we-run/front-end/src/app/components/posting/posting.component.ts"],"names":["__decorate","Component","FormGroup","FormControl","Validators","Swal","PostingComponent","constructor","service","form","reqdata","addressData","comData","id","comment","ngOnInit","street_address","required","minLength","city","suburb","postal_code","maxLength","getAddress","clientId","localStorage","getItem","serviceId","getMaxId","alertWithSuccess","fire","addRequest","client_id","service_id","console","log","subscribe","res","request_id","setItem","value","addComment","f","controls","onSubmit","submitted","invalid","JSON","stringify","myFunction","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,QAAmD,gBAAnD;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,IAAIC,gBAAgB,GAAG,MAAMA,gBAAN,CAAuB;AAC1CC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAY,IAAIP,SAAJ,CAAc,EAAd,CAAZ;AACA,SAAKQ,OAAL,GAAe,EAAf;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,OAAL,GAAe;AACXC,MAAAA,EAAE,EAAE,KADO;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAf;AAIH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKN,IAAL,GAAY,IAAIP,SAAJ,CAAc;AACtBc,MAAAA,cAAc,EAAE,IAAIb,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACa,QAAZ,EAAsBb,UAAU,CAACc,SAAX,CAAqB,CAArB,CAAtB,CAApB,CADM;AAEtBJ,MAAAA,OAAO,EAAE,IAAIX,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACa,QAAZ,CAApB,CAFa;AAGtBE,MAAAA,IAAI,EAAE,IAAIhB,WAAJ,CAAgB,EAAhB,EAAoBC,UAAU,CAACa,QAA/B,CAHgB;AAItBG,MAAAA,MAAM,EAAE,IAAIjB,WAAJ,CAAgB,EAAhB,EAAoBC,UAAU,CAACa,QAA/B,CAJc;AAKtBI,MAAAA,WAAW,EAAE,IAAIlB,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACa,QAAZ,EAAsBb,UAAU,CAACkB,SAAX,CAAqB,CAArB,CAAtB,EAA+ClB,UAAU,CAACc,SAAX,CAAqB,CAArB,CAA/C,CAApB;AALS,KAAd,CAAZ;AAOA,SAAKK,UAAL;AACA,SAAKC,QAAL,GAAgBC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAhB;AACA,SAAKC,SAAL,GAAiBF,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAjB;AACA,SAAKE,QAAL;AACH;;AACDC,EAAAA,gBAAgB,GAAG;AACfxB,IAAAA,IAAI,CAACyB,IAAL,CAAU,cAAV,EAA0B,kCAA1B,EAA8D,SAA9D;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,SAAKrB,OAAL,GAAe;AACXsB,MAAAA,SAAS,EAAE,KAAKR,QADL;AAEXS,MAAAA,UAAU,EAAE,KAAKN,SAFN,CAGX;;AAHW,KAAf;AAKAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,WAAjB;AACH;;AACDiB,EAAAA,QAAQ,GAAG;AACP,SAAKpB,OAAL,CAAaoB,QAAb,CAAsB,KAAKJ,QAA3B,EAAqCY,SAArC,CAAgDC,GAAD,IAAS;AACpD,WAAKC,UAAL,GAAkBD,GAAlB;AACA,WAAK1B,WAAL,CAAiB2B,UAAjB,GAA8BD,GAA9B;AACAZ,MAAAA,YAAY,CAACc,OAAb,CAAqB,YAArB,EAAmCF,GAAG,CAAC,CAAD,CAAH,CAAOxB,EAA1C;AACA,WAAKyB,UAAL,GAAkBb,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAlB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwB,KAAKG,UAAzC;AACH,KAND;AAOH;;AACKf,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACf,MAAA,KAAI,CAACZ,WAAL,GAAmB;AACf2B,QAAAA,UAAU,EAAEb,YAAY,CAACC,OAAb,CAAqB,YAArB,CADG;AAEfV,QAAAA,cAAc,EAAE,KAAI,CAACP,IAAL,CAAU+B,KAAV,CAAgBxB,cAFjB;AAGfI,QAAAA,MAAM,EAAE,KAAI,CAACX,IAAL,CAAU+B,KAAV,CAAgBpB,MAHT;AAIfD,QAAAA,IAAI,EAAE,KAAI,CAACV,IAAL,CAAU+B,KAAV,CAAgBrB,IAJP;AAKfE,QAAAA,WAAW,EAAE,KAAI,CAACZ,IAAL,CAAU+B,KAAV,CAAgBnB,WALd;AAMfP,QAAAA,OAAO,EAAE,KAAI,CAACL,IAAL,CAAU+B,KAAV,CAAgB1B;AANV,OAAnB;AAQA,MAAA,KAAI,CAACF,OAAL,CAAaE,OAAb,GAAuB,KAAI,CAACL,IAAL,CAAU+B,KAAV,CAAgB1B,OAAvC;AACA,MAAA,KAAI,CAACF,OAAL,CAAaC,EAAb,GAAkBY,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAlB;;AACA,MAAA,KAAI,CAAClB,OAAL,CAAae,UAAb,CAAwB,KAAI,CAACZ,WAA7B,EAA0CyB,SAA1C,CAAqDC,GAAD,IAAS;AACzDH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACvB,OAAjB;;AACA,QAAA,KAAI,CAAC6B,UAAL;AACH,OAJD;AAXe;AAgBlB;;AACDA,EAAAA,UAAU,GAAG;AACT,SAAKjC,OAAL,CAAaiC,UAAb,CAAwB,KAAK7B,OAA7B,EAAsCwB,SAAtC,CAAiDC,GAAD,IAAS;AACrDH,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KAFD;AAGH;;AACI,MAADO,CAAC,GAAG;AACJ,WAAO,KAAKjC,IAAL,CAAUkC,QAAjB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,SAAL,GAAiB,IAAjB;;AACA,QAAI,KAAKpC,IAAL,CAAUqC,OAAd,EAAuB;AACnB;AACH;;AACDZ,IAAAA,OAAO,CAACC,GAAR,CAAYY,IAAI,CAACC,SAAL,CAAe,KAAKvC,IAAL,CAAU+B,KAAzB,EAAgC,IAAhC,CAAZ;AACH;;AACDS,EAAAA,UAAU,GAAG;AACTf,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,IAAL,CAAU+B,KAAtB;AACH;;AA9EyC,CAA9C;AAgFAlC,gBAAgB,GAAGN,UAAU,CAAC,CAC1BC,SAAS,CAAC;AACNiD,EAAAA,QAAQ,EAAE,aADJ;AAENC,EAAAA,WAAW,EAAE,0BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,yBAAD;AAHL,CAAD,CADiB,CAAD,EAM1B9C,gBAN0B,CAA7B;AAOA,SAASA,gBAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nlet PostingComponent = class PostingComponent {\n    constructor(service) {\n        this.service = service;\n        this.form = new FormGroup({});\n        this.reqdata = {};\n        this.addressData = {};\n        this.comData = {\n            id: \"any\",\n            comment: \"any\"\n        };\n    }\n    ngOnInit() {\n        this.form = new FormGroup({\n            street_address: new FormControl('', [Validators.required, Validators.minLength(3)]),\n            comment: new FormControl('', [Validators.required]),\n            city: new FormControl('', Validators.required),\n            suburb: new FormControl('', Validators.required),\n            postal_code: new FormControl('', [Validators.required, Validators.maxLength(4), Validators.minLength(4)])\n        });\n        this.getAddress;\n        this.clientId = localStorage.getItem(\"clientID\");\n        this.serviceId = localStorage.getItem(\"serviceID\");\n        this.getMaxId();\n    }\n    alertWithSuccess() {\n        Swal.fire('Thank you...', 'Your post is succesfully sentðŸ˜‰!', 'success');\n    }\n    addRequest() {\n        this.reqdata = {\n            client_id: this.clientId,\n            service_id: this.serviceId,\n            //comment : this.form.value.comment\n        };\n        console.log(this.addressData);\n    }\n    getMaxId() {\n        this.service.getMaxId(this.clientId).subscribe((res) => {\n            this.request_id = res;\n            this.addressData.request_id = res;\n            localStorage.setItem(\"request_id\", res[0].id);\n            this.request_id = localStorage.getItem(\"request_id\");\n            console.log('The request id is :' + this.request_id);\n        });\n    }\n    async getAddress() {\n        this.addressData = {\n            request_id: localStorage.getItem(\"request_id\"),\n            street_address: this.form.value.street_address,\n            suburb: this.form.value.suburb,\n            city: this.form.value.city,\n            postal_code: this.form.value.postal_code,\n            comment: this.form.value.comment\n        };\n        this.comData.comment = this.form.value.comment;\n        this.comData.id = localStorage.getItem(\"request_id\");\n        this.service.getAddress(this.addressData).subscribe((res) => {\n            console.log(res);\n            console.log(this.comData);\n            this.addComment();\n        });\n    }\n    addComment() {\n        this.service.addComment(this.comData).subscribe((res) => {\n            console.log('comment added');\n        });\n    }\n    get f() {\n        return this.form.controls;\n    }\n    onSubmit() {\n        this.submitted = true;\n        if (this.form.invalid) {\n            return;\n        }\n        console.log(JSON.stringify(this.form.value, null));\n    }\n    myFunction() {\n        console.log(this.form.value);\n    }\n};\nPostingComponent = __decorate([\n    Component({\n        selector: 'app-posting',\n        templateUrl: './posting.component.html',\n        styleUrls: ['./posting.component.css']\n    })\n], PostingComponent);\nexport { PostingComponent };\n"]},"metadata":{},"sourceType":"module"}